#!/bin/bash
# ARM64 Assembler Tool
# Usage: echo "mov x1, #10" | ./asm
# or: ./asm "mov x1, #10"

set -euo pipefail

# Path to LLVM MC
LLVM_MC="/opt/homebrew/opt/llvm/bin/llvm-mc"

# Check if llvm-mc exists
if [[ ! -x "$LLVM_MC" ]]; then
    echo "Error: llvm-mc not found at $LLVM_MC" >&2
    echo "Please install LLVM via: brew install llvm" >&2
    exit 1
fi

# Function to process assembly input
process_asm() {
    local input="$1"
    echo "$input" | "$LLVM_MC" -arch=arm64 -mattr=v9.6a -show-encoding | \
        sed -n 's/.*\(0x[0-9a-f]*\),\(0x[0-9a-f]*\),\(0x[0-9a-f]*\),\(0x[0-9a-f]*\).*/\1 \2 \3 \4/p'
}

# Check if input is provided as argument
if [[ $# -gt 0 ]]; then
    # Use command line argument
    process_asm "$1"
elif [[ ! -t 0 ]]; then
    # Read from stdin (pipe)
    while IFS= read -r line; do
        process_asm "$line"
    done
else
    echo "Usage: echo \"mov x1, #10\" | $0"
    echo "   or: $0 \"mov x1, #10\""
    exit 1
fi
